name: CI/CD for Dockerized Flask App

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  dockerbuild:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4
    - name: Build The Docker Image
      run: |
        TIMESTAMP=$(date +%s)
        docker build . --tag workflow-test:$TIMESTAMP
        docker run --rm workflow-test:$TIMESTAMP

  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask pytest

    # Uncomment to run tests if you add any
    # - name: Run tests
    #   run: pytest

  build-and-publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/flasktest-app:latest

  deploy-to-minikube:
    needs: build-and-publish
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.29.0'

    - name: Ensure Minikube is running
      run: |
        minikube status || minikube start --driver=docker

    - name: Load Docker image into Minikube
      run: |
        minikube image load ${{ secrets.DOCKER_USERNAME }}/flasktest-app:latest

    - name: Apply Kubernetes manifests
      run: |
        kubectl apply -f k8s/Deployment.yaml
        kubectl apply -f k8s/Service.yaml

    - name: Verify Deployment Rollout
      run: |
        kubectl rollout status deployment flask-app-deployment

    - name: Get service URL
      id: get-service-url
      run: |
        URL=$(minikube service flask-app-service --url)
        echo "SERVICE_URL=$URL" >> $GITHUB_ENV

    - name: Output Service URL
      run: echo "App is available at $SERVICE_URL"
