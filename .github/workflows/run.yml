name: CI/CD for Dockerized Flask App

on:
  push:
    branches: dev
  pull_request:
    branches: dev

jobs:
  dockerbuild:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4
    - name: Build The Docker Image
      run: |
        docker build .  --tag workflow-test:$(date +%s)
        docker run workflow-test:$(date +%s)
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask
        pip install pytest

#   - name: Run tests
#    run: |
#        pytest

  build-and-publish:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/flasktest-app:latest

      deploy-to-minikube:
    needs: build-and-publish
    runs-on: self-hosted
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Ensure Minikube is running
      run: |
        minikube status || minikube start --driver=docker

    - name: Use Docker image in Minikube
      run: |
        minikube image load ${{ secrets.DOCKER_USERNAME }}/flasktest-app:latest

    - name: Apply Kubernetes manifests
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml

    - name: Verify Deployment
      run: |
        kubectl rollout status deployment flask-app-deployment
